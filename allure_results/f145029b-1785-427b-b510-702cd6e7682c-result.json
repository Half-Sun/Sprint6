{"name": "test_second_order_page_via_top_button_is_filled[\\u0411\\u0435\\u0437 \\u043f\\u0430\\u043a\\u0435\\u0442\\u043e\\u0432, \\u043f\\u0432\\u0438\\u0437!-\\u041a\\u0430\\u0442\\u044f-\\u0423\\u043c\\u043d\\u0430\\u044f-123 \\u041f\\u0443\\u043b\\u043a\\u043e\\u0432\\u0441\\u043a\\u043e\\u0435 \\u0448\\u043e\\u0441\\u0441\\u0435-+79123456789]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"Button_Button__ra12g Button_Middle__1CSJM\"> is not clickable at point (875,545) because another element <div class=\"Order_Modal__YZ-d3\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:336:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31", "trace": "self = <test_order_page.TestOrderFirstPage object at 0x000001D6B9649AC0>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"73d77711-59ea-4a01-8d6e-2e6b7c848843\")>, name = 'Катя', last_name = 'Умная'\naddress = '123 Пулковское шоссе', mobile = '+79123456789', comment = 'Без пакетов, пвиз!'\n\n    @allure.step(\"Parameterized test - Order form filled via top button and comment added\")\n    @pytest.mark.parametrize(\n        \"name, last_name, address, mobile\",\n        order_data\n    )\n    @pytest.mark.parametrize(\n        \"comment\",\n        order_data_2\n    )\n    def test_second_order_page_via_top_button_is_filled(self, driver, name, last_name, address, mobile, comment):\n        order_second_page = OrderPage(driver)\n        driver.get('https://qa-scooter.praktikum-services.ru')\n    \n        allure.step(\"Click on the top 'Order' button\")\n        order_second_page.click_on_element(OrderPageLocators.TOP_ORDER_BUTTON)\n    \n        allure.step(\"Fill in the first page of the order form\")\n        order_second_page.set_first_page_order(OrderPageLocators.ORDER_INPUT_NAME, name,\n                                               OrderPageLocators.ORDER_INPUT_LAST_NAME, last_name,\n                                               OrderPageLocators.ORDER_INPUT_ADDRESS, address,\n                                               OrderPageLocators.ORDER_INPUT_STATION_ALL,\n                                               OrderPageLocators.ORDER_INPUT_STATION,\n                                               OrderPageLocators.ORDER_INPUT_MOBILE, mobile,\n                                               OrderPageLocators.ORDER_NEXT_BUTTON)\n    \n        allure.step(\"Fill in the second page of the order form\")\n        order_second_page.set_second_page_order(OrderPageLocators.ORDER_INPUT_WHEN_1,\n                                                OrderPageLocators.ORDER_INPUT_WHEN_2,\n                                                OrderPageLocators.ORDER_INPUT_RENTAL_PERIOD_1,\n                                                OrderPageLocators.ORDER_INPUT_RENTAL_PERIOD_2,\n                                                OrderPageLocators.ORDER_INPUT_COLOR,\n                                                OrderPageLocators.ORDER_INPUT_COMMENT, comment,\n                                                OrderPageLocators.ORDER_INPUT_WANNA_ORDER)\n    \n        allure.step(\"Click on 'Заказать' button\")\n>       order_second_page.click_on_element(OrderPageLocators.ORDER_INPUT_WANNA_ORDER)\n\ntests\\test_order_page.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:21: in click_on_element\n    WebDriverWait(self.driver, 10).until(expected_conditions.element_to_be_clickable(locator)).click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D6B9A56570>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <button class=\\\\\"Button_But...sys.mjs:204:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"Button_Button__ra12g Button_Middle__1CSJM\"> is not clickable at point (875,545) because another element <div class=\"Order_Modal__YZ-d3\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:336:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Parameterized test - Order form filled via top button and comment added", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"Button_Button__ra12g Button_Middle__1CSJM\"> is not clickable at point (875,545) because another element <div class=\"Order_Modal__YZ-d3\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:336:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n", "trace": "  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\PycharmProjects\\Sprint_6\\tests\\test_order_page.py\", line 87, in test_second_order_page_via_top_button_is_filled\n    order_second_page.click_on_element(OrderPageLocators.ORDER_INPUT_WANNA_ORDER)\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\PycharmProjects\\Sprint_6\\pages\\base_page.py\", line 21, in click_on_element\n    WebDriverWait(self.driver, 10).until(expected_conditions.element_to_be_clickable(locator)).click()\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "driver", "value": "<selenium.webdriver.firefox.webdriver.WebDriver (session=\"73d77711-59ea-4a01-8d6e-2e6b7c848843\")>"}, {"name": "name", "value": "'Катя'"}, {"name": "last_name", "value": "'Умная'"}, {"name": "address", "value": "'123 Пулковское шоссе'"}, {"name": "mobile", "value": "'+79123456789'"}, {"name": "comment", "value": "'Без пакетов, пвиз!'"}], "start": 1711649884278, "stop": 1711649890542}], "parameters": [{"name": "comment", "value": "'Без пакетов, пвиз!'"}, {"name": "name", "value": "'Катя'"}, {"name": "last_name", "value": "'Умная'"}, {"name": "address", "value": "'123 Пулковское шоссе'"}, {"name": "mobile", "value": "'+79123456789'"}], "start": 1711649884278, "stop": 1711649890543, "uuid": "5178eadb-7f08-498d-88fd-580321742f47", "historyId": "3bd8f35a0c29e7c3be22d9f8c2c71d21", "testCaseId": "466a4412c5507ee13c3a63475f9e9646", "fullName": "tests.test_order_page.TestOrderFirstPage#test_second_order_page_via_top_button_is_filled", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderFirstPage"}, {"name": "host", "value": "WKST-QA-08"}, {"name": "thread", "value": "23332-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}